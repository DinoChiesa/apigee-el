<OAuthV2 name="##" continueOnError="false">
  <Description>OAuthV2-GenerateAccessToken-CC</Description>
  <Operation>GenerateAccessToken</Operation>
  <Scope>request.formparam.scope</Scope>
  <!--
      ExpiresIn, in milliseconds. The ref is optional. The explicitly specified
      value is the default, when the variable reference cannot be resolved.
      2400000 = 40 minutes
      3600000 = 60 minutes
  -->
  <ExpiresIn ref='flow.variable'>2400000</ExpiresIn>
  <SupportedGrantTypes>
    <GrantType>client_credentials</GrantType>
  </SupportedGrantTypes>

  <!--
      Optional: these attributes get associated to the token.
      They will be available to the api proxy whenever the token is
      subsequently validated.
  -->
  <Attributes>
    <!-- If set to false, the attribute wont be delivered in the auth code response. -->
    <Attribute name='attr_name1' ref='flow.variable1' display='true|false'>value1</Attribute>
    <Attribute name='attr_name2' ref='flow.variable2' display='true|false'>value2</Attribute>
  </Attributes>

  <GenerateResponse enabled="false"/>
  <RFCCompliantRequestResponse>true</RFCCompliantRequestResponse>
  <!--

      If you include <GenerateResponse enabled='true'>, then, on success,
      the response is sent directly to the caller. The payload looks like
      this:

      {
        "access_token": "2l4IQtZXbn5WBJdL6EF7uenOWRsi",
        "issued_at": "1420262924658",
        "expires_in": "1799",
        "scope": "READ",
        ...
      }

      On failure, in some cases no fault is thrown and a response is sent
      directly to the caller.

      If you omit GenerateResponse or include <GenerateResponse enabled='false'>,
      then, on success, various flow variables are set. The names all have the prefix
      oauthv2accesstoken.##

      .access_token
      .expires_in
      .token_type
      .expires_in
      .refresh_token
      .refresh_token_expires_in
      .refresh_token_issued_at
      .refresh_token_status
      ...

      and you must assemble and assign a response manually.

      On Failure, a fault is thrown and can be handled by FaultRules.

  -->

</OAuthV2>
